%*********************************
%* BFO-FOL Axioms                *
%*********************************

all x (Continuant(x) -> Entity(x)).

all x (IndependentContinuant(x) -> Continuant(x)).

all x (MaterialEntity(x) -> IndependentContinuant(x)).

all x (GenericallyDependentContinuant(x) -> Continuant(x)).

all x (SpecificallyDependentContinuant(x) -> Continuant(x)).

all x (Occurrent(x) -> Entity(x)).

all x (Process(x) -> Occurrent(x)).

all x (ProcessBoundary(x) -> Occurrent(x)).

all x (TemporalRegion(x) -> Occurrent(x)).

all x (ZeroDimensionalTemporalRegion(x) -> TemporalRegion(x)).

all x (OneDimensionalTemporalRegion(x) -> TemporalRegion(x)).

all x (SpatiotemporalRegion(x) -> Occurrent(x)).

all x (Entity(x) -> (Continuant(x) | Occurrent(x))).

-(exists x (Continuant(x) & Occurrent(x))).

all x (IndependentContinuant(x) -> (-GenericallyDependentContinuant(x) & -SpecificallyDependentContinuant(x))).

all x (GenericallyDependentContinuant(x) -> (-IndependentContinuant(x) & -SpecificallyDependentContinuant(x))).

all x (SpecificallyDependentContinuant(x) -> (-GenericallyDependentContinuant(x) & -IndependentContinuant(x))).

all x (Process(x) -> (-ProcessBoundary(x) & -TemporalRegion(x) & -SpatiotemporalRegion(x))).

all x (ProcessBoundary(x) -> (-Process(x) & -TemporalRegion(x) & -SpatiotemporalRegion(x))).

all x (TemporalRegion(x) -> (-ProcessBoundary(x) & -Process(x) & -SpatiotemporalRegion(x))).

all x (SpatiotemporalRegion(x) -> (-ProcessBoundary(x) & -TemporalRegion(x) & -Process(x))).
 
all x all y all t(properContinuantPartOfAt(x,y,t) <-> (continuantPartOfAt(x,y,t) & -(x=y))).

all x all y all t(continuantPartOfAt(x,y,t) -> (Continuant(x) & Continuant(y) & TemporalRegion(t))).

all x all t ((Continuant(x) & existsAt(x,t))-> continuantPartOfAt(x,x,t)).  

all x all y all t((continuantPartOfAt(x,y,t) & continuantPartOfAt(y,x,t)) -> x=y).

all x all y all z all t ((continuantPartOfAt(x,y,t) & continuantPartOfAt(y,z,t))->continuantPartOfAt(x,z,t)).

all x all y all t(continuantOverlapAt(x,y,t) -> (exists z (all w(continuantPartOfAt(w,z,t) <-> (continuantPartOfAt(w,x,t) & continuantPartOfAt(w,y,t)))))).

all x all y all t(continuantOverlapAt(x,y,t) -> (exists z (continuantOverlapAt(z,x,t) & continuantOverlapAt(z,y,t) & all w((continuantOverlapAt(w,x,t) & continuantOverlapAt(w,y,t))-> w=z)))). 
 
all x all y (properOccurrentPartOf(x,y) <-> (occurrentPartOf(x,y) & -(x=y))).

all x all y(occurrentPartOf(x,y) -> (Occurrent(x) & Occurrent(y))).

all x all t((TemporalRegion(t) & existsAt(x,t) & Occurrent(x))->occurrentPartOf(x,x)).
 
all x all y ((occurrentPartOf(x,y) & occurrentPartOf(y,x)) -> x=y).

all x all y all z  ((occurrentPartOf(x,y) & occurrentPartOf(y,z))->occurrentPartOf(x,z)). 

all x all y (properOccurrentPartOf(x,y)-> (exists z(properOccurrentPartOf(z,y) & -(occurrentOverlap(z,x))))).

all x all y (occurrentOverlap(x,y) -> (exists z (all w(occurrentPartOf(w,z) <-> (occurrentPartOf(w,x) & occurrentPartOf(w,y)))))).

all x all t (existsAt(x,t) -> (Entity(x) & TemporalRegion(t) & (Entity(x) <-> TemporalRegion(t)))).

all x all t (existsAt(x,t) -> TemporalRegion(t)). 

all x all y((exists t (TemporalRegion(t) & GenericallyDependentContinuant(x) & genericallyDependsOnAt(x,y,t)))-> all t_1 ((TemporalRegion(t_1) & existsAt(x,t_1))->exists z(genericallyDependsOnAt(x,z,t_1)))).

all x (GenericallyDependentContinuant(x)<->(Continuant(x) & exists y exists t (IndependentContinuant(y) & TemporalRegion(t) & genericallyDependsOnAt(x,y,t)))).

all x all y all t ((TemporalRegion(t) & genericallyDependsOnAt(x,y,t))-> exists z (concretizesAt(z,x,t) & specificallyDependsOnAt(z,y,t))).

all x (Process(x) -> exists z exists t(TemporalRegion(t) & MaterialEntity(z) & specificallyDependsOnAt(x,z,t))).

%*************************************
%     ARGO AXIOMS                    *
%*************************************

%*********************************
%    CLASS HIERARCHY AXIOMS      *
%*********************************

all x (InformationContentEntity(x) -> GenericallyDependentContinuant(x)). 

%Any instance of InformationContentEntity is an instance of GenericallyDependentContinuant

all x (CollectionOfSentenceContents(x) -> InformationContentEntity(x)).

%Any instance of CollectionOfSentenceContents is an instance of InformationContentEntity

all x(Argument(x) -> CollectionOfSentenceContents(x)).

%Any instance of Argument is an instance of CollectionOfSentenceContents

all x(ComplexArgument(x) -> Argument(x)). 

%Any instance of ComplexArgument is an instance of Argument

all x(SentenceContent(x) -> InformationContentEntity(x)).

%Any instance of SentenceContent is an instance of InformationContentEntity

all x(Statement(x) -> SentenceContent(x)).

%Any instance of Statement is an instance of SentenceContent.

-(exists x(SentenceContent(x) & CollectionOfSentenceContents(x))).

%SentenceContent and CollectionOfSentenceContents are disjoint

all x (LanguageAct(x) -> Process(x)).

%Any instance of LanguageAct is an instance of Process

all x (ActOfArguing(x) -> (LanguageAct(x) & -(ActOfArgumentCreation(x) | ActOfAccepting(x) | ActOfAffirming(x) | ActOfInferring(x)))).

%Any instance of ActOfArguing is an instance of LanguageAct, disjoint from ActOfArgumentCreation, ActOfAccepting, ActOfAffirming, ActOfInferring

all x(ActOfArgumentCreation(x) -> (LanguageAct(x) & -(ActOfArguing(x) | ActOfAccepting(x) | ActOfAffirming(x) | ActOfInferring(x)))).

%Any instance of ActOfArgumentCreation is an instance of LanguageAct, disjoint from ActOfArguing, ActOfAccepting, ActOfAffirming, ActOfInferring

all x(ActOfAccepting(x) -> (LanguageAct(x) & -(ActOfArgumentCreation(x) | ActOfArguing(x) | ActOfAffirming(x) | ActOfInferring(x)))).

%Any instance of ActOfAccepting is an instance of LanguageAct, disjoint from ActOfArguing, ActOfArgumentCreation, ActOfAffirming, ActOfInferring

all x(ActOfAffirming(x) -> (LanguageAct(x) & -(ActOfArgumentCreation(x) | ActOfAccepting(x) | ActOfArguing(x) | ActOfInferring(x)))).

%Any instance of ActOfAffirming is an instance of LanguageAct, disjoint from ActOfArguing, ActOfArgumentCreation, ActOfAccepting, ActOfInferring

all x(ActOfInferring(x) -> (LanguageAct(x) & -(ActOfArgumentCreation(x) | ActOfAccepting(x) | ActOfArguing(x) | ActOfAffirming(x)))).

%Any instance of ActOfInferring is an instance of LanguageAct, disjoint from ActOfArguing, ActOfArgumentCreation, ActOfAccepting, ActOfAffirming

%*********************************
%    CLASS CONSTRAINT AXIOMS     *
%*********************************  

all x(CollectionOfSentenceContents(x) -> exists y exists t(properContinuantPartOfAt(y,x,t) & SentenceContent(y))). 

%Any collection of sentence contents has sentence content parts 

all x(Argument(x) -> exists y exists t(ActOfArgumentCreation(y) & TemporalRegion(t) & isCreatedBy(x,y,t))). 

%Any argument entails the existence of an act of argument creation of which the argument is created at some time 

all x(Argument(x) -> exists y exists z exists t((premiseIn(y,x,t) | suppositionIn(y,x,t)) & conclusionIn(z,x,t) & all u(conclusionIn(u,x,t)-> z=u))).

%Any argument has a premise or supposition and only one conclusion; leave open whether y=z 

all x all y all t((Argument(x) & -ComplexArgument(x) &  properContinuantPartOfAt(y,x,t)) -> -(ComplexArgument(y) | Argument(y))). 

%The proper parts of any simple argument are neither complex arguments nor simple arguments 


all x(ActOfArgumentCreation(x) -> exists y exists t(Argument(y) & TemporalRegion(t) & isCreatedBy(y,x,t))).

%Any act of argument creation creates an argument at a time  

all x all y all t((ActOfArgumentCreation(x) & ComplexArgument(y) & isCreatedBy(y,x,t))-> exists u exists v(Argument(u) & ActOfArgumentCreation(v) & properContinuantPartOfAt(u,y,t) & properOccurrentPartOf(v,x) & isCreatedBy(u,v,t))).

%Act of argument creation which creates a complex argument entails proper part of complex are created by proper part of act of argument creation

all x all y all z all t((ActOfArgumentCreation(x) & isCreatedBy(y,x,t) & isCreatedBy(z,x,t)) -> z=y). 

%Act of argument creation has unique argument output

all x all y all z all t((ActOfArgumentCreation(x) & ActOfArgumentCreation(y) & ComplexArgument(z) & isCreatedBy(z,x,t) & properContinuantPartOfAt(w,z,t) & isCreatedBy(w,y,t)) -> properOccurrentPartOf(y,x)). 

%An act of argument creation which creates a proper argument part of a complex argument is itself a proper part of the creation of the complex argument   


all x(ComplexArgument(x) -> exists y exists t (subconclusionIn(y,x,t))). 

%Any complex argument entails some subconclusion

all x all y all t((ComplexArgument(y) & conclusionIn(x,y,t))-> exists z(Argument(z) & properContinuantPartOfAt(z,y,t) & conclusionIn(x,z,t))).

%The conclusion of a complex argument must be the conclusion of one of the complex arguments's proper parts 

all x(ComplexArgument(x) <-> exists y exists t(properContinuantPartOfAt(y,x,t) & Argument(y) & -ComplexArgument(y))). 

%Complex arguments are ultimately composed of simple argument parts, and anything with proper argument part is a complex argument  

all x all y all t((Argument(x) & ComplexArgument(y) & properContinuantPartOfAt(x,y,t))-> exists w exists u(ActOfArgumentCreation(w) & ActOfArgumentCreation(u) & isCreatedBy(x,w,t) & isCreatedBy(y,u,t) & properOccurrentPartOf(w,u) & -(isCreatedBy(x,u,t) | isCreatedBy(y,w,t)))).

%A proper argument part of a complex argument entails distinct acts of argument creation for the complex argument and its part


all x all y all t((ActOfAffirming(x) & TemporalRegion(t) & outputOf(y,x,t)) -> SentenceContent(y)).

%Any act of affirming entails as output some sentence content

all x all y all t((ActOfAccepting(x) & TemporalRegion(t) & outputOf(y,x,t)) -> SentenceContent(y)).

%Any act of accepting entails as output some sentence content  

all x all y all z all t((ActOfAffirming(x) & outputOf(y,x,t) & outputOf(z,x,t)) -> z=y). 

%An act of affirming has unique output

all x all y all z all t((ActOfAccepting(x) & outputOf(y,x,t) & outputOf(z,x,t)) -> z=y). 

%An act of accepting has unique output 

all x all y all z all t(((premiseIn(x,y,t) | suppositionIn(x,y,t)) & Argument(y) & ComplexArgument(z) & properContinuantPartOfAt(y,z,t))-> (premiseIn(x,z,t) | suppositionIn(x,z,t))).

%If x is a premise or supposition in A, and A is a proper part of complex C, then x is a premise or supposition in C 


all x all y all z all w all t((premiseIn(x,y,t) & ActOfAffirming(z) & outputOf(x,z,t) & ActOfArgumentCreation(w) & isCreatedBy(y,w,t)) -> occurrentPartOf(z,w)). 

%Act of affirming premise in an argument is part of the act of argument creation 

all x all y all z all w all t((conclusionIn(x,y,t) & (ActOfAccepting(z) | ActOfAffirming(z)) & outputOf(x,z,t) & ActOfArgumentCreation(w) & isCreatedBy(y,w,t)) -> occurrentPartOf(z,w)). 

%Act of affirming or accepting conclusion in an argument is part of the act of argument creation

all x all y all z all w all t((suppositionIn(x,y,t) & ActOfAccepting(z) & outputOf(x,z,t) & ActOfArgumentCreation(w) & isCreatedBy(y,w,t)) -> occurrentPartOf(z,w)). 

%Act of accepting a supposition in an argument is a part of the act of argument creation 


all x(ActOfInferring(x) -> exists y exists z exists t(TemporalRegion(t) & SentenceContent(y) & SentenceContent(z) & inputOf(y,x,t) & outputOf(z,x,t))). 

%Act of inferring takes sentence contents as inputs and outputs

all x(ActOfInferring(x) -> exists y (ActOfArgumentCreation(y) & properOccurrentPartOf(x,y))).

%Act of inferring is occurrent part of some act of argument creation 


%*********************************
%    RELATION HIERARCHY AXIOMS   *
%*********************************

%Inverses can be easily defined with the following schema: all x all y all t(R(x,y,t) <-> R'(y,x,t)). We leave them aside for simplicity. 

all x all y all t(premiseIn(x,y,t) -> continuantPartOfAt(x,y,t)). 

%PremiseIn is a sub-relation of continuantPartOfAt

all x all y all t(suppositionIn(x,y,t) -> continuantPartOfAt(x,y,t)). 

%SuppositionIn is a sub-relation of continuantPartOfAt

all x all y all t(conclusionIn(x,y,t) -> continuantPartOfAt(x,y,t)).

%ConclusionIn is a sub-relation of continuantPartOfAt 

all x all y all t(subconclusionIn(x,y,t) -> continuantPartOfAt(x,y,t)). 

%SubconclusionIn is a sub-relation of continuantPartOfAt

all x all y all t(isCreatedBy(x,y,t) -> outputOf(x,y,t)). 

%Is created by a sub-relation of output of

%*********************************
%    RELATION CONSTRAINT AXIOMS  *
%********************************* 

all x all y all t(inputOf(x,y,t) -> (Continuant(x) & Process(y) & TemporalRegion(t))).

%InputOf restricted to continuants, processes, and temporal regions

all x all y all t(outputOf(x,y,t) -> (Continuant(x) & Process(y) & TemporalRegion(t))).

%OutputOf restricted to continuants, processes, and temporal regions

all x all y all t(isCreatedBy(x,y,t) -> ((Argument(x) | ComplexArgument(x)) & ActOfArgumentCreation(y) & TemporalRegion(t))). 

%IsCreatedBy restricted to arguments, acts of argument creatin, and temporal regions

all x all y all t(premiseIn(x,y,t) -> (SentenceContent(x) & Argument(y) & TemporalRegion(t) & continuantPartOfAt(x,y,t) & exists z exists w exists u(ActOfAffirming(z) & outputOf(x,z,t) & ActOfInferring(w) & inputOf(x,w,t) & ActOfArgumentCreation(u) & isCreatedBy(y,u,t) & properOccurrentPartOf(z,u) & properOccurrentPartOf(w,u)))).

%Premise in holds between sentence content and argument at a time, and requires the existence of some act of affirming of which the sentence content is the output  

all x all y all t(conclusionIn(x,y,t) -> (SentenceContent(x) & Argument(y) & TemporalRegion(t) & continuantPartOfAt(x,y,t) & exists z exists w exists u((ActOfAffirming(z) | ActOfAccepting(z)) & outputOf(x,z,t) & ActOfInferring(w) & outputOf(x,w,t) & ActOfArgumentCreation(u) & properOccurrentPartOf(z,u) & isCreatedBy(y,u,t) & properOccurrentPartOf(w,u)))).

%Conclusion in holds between sentence content and argument at a time, and requires the existence of some act of affirming or accepting of which the content is the output  

all x all y all t(suppositionIn(x,y,t) -> (SentenceContent(x) & Argument(y) & TemporalRegion(t) & continuantPartOfAt(x,y,t) & exists z exists w exists u(ActOfAccepting(z) & outputOf(x,z,t) & ActOfInferring(w) & inputOf(x,w,t) & ActOfArgumentCreation(u) & properOccurrentPartOf(z,u) & isCreatedBy(y,u,t) & properOccurrentPartOf(w,u)))).

%Supposition in holds between sentence content and argument at a time, and requires the existence of some act of accepting of which the content is the output 

all x all y all t(subconclusionIn(x,y,t) -> (SentenceContent(x) & ComplexArgument(y) & TemporalRegion(t) & (premiseIn(x,y,t) | suppositionIn(x,y,t)) & exists z(Argument(z) & properContinuantPartOfAt(z,y,t) & conclusionIn(x,z,t)))).  

%SubconclusionIn holds between sentence content and complex argument where content is itemIn continuant parts of commplex argument  
 
%*********************************
%     A-BOX TEST CASES           *
%*********************************

%VERIFIED
%SentenceContent(a).  
%Argument(b). 
%ActOfArgumentCreation(c). 
%ComplexArgument(d). 
%premiseIn(e,f,t). 
%conclusionIn(g,h,t).
%suppositionIn(i,j,t).
%subconclusionIn(k,l,t).

%VERIFIED
%SentenceContent(a) & SentenceContent(b) & SentenceContent(c) & -(a=b & b=c & a=c).  
%Argument(d). 
%ActOfArgumentCreation(e). 
%ComplexArgument(f). 
%premiseIn(a,d,t) & premiseIn(a,f,t).  
%conclusionIn(b,f,t) & conclusionIn(b,d,t).
%subconclusionIn(b,f,t).

%VERIFIED
%SentenceContent(a) & SentenceContent(b) & -(a=b).  
%Argument(d). 
%ActOfArgumentCreation(e). 
%suppositionIn(a,d,t) & suppositionIn(a,f,t).  
%conclusionIn(b,f,t) & conclusionIn(b,d,t).

%*********************************
%     THEOREMS                   *
%*********************************

all x all y all t(premiseIn(x,y,t) -> -(premiseIn(y,x,t))).

%PremiseIn is asymmetric. NB: Similarly for conclusionIn and suppositionIn

-(exists x exists t(premiseIn(x,x,t))). 

%PremiseIn is irreflexive. NB: Similarly for conclusionIn and suppositionIn

all x all y all t((SentenceContent(x) & TemporalRegion(t) & ActOfAffirming(y) & outputOf(x,y,t))-> -(ActOfAccepting(y))).

%Output of act of affirming is not act of accepting. Trivial from disjointness axioms 

all x all y all t((SentenceContent(x) & TemporalRegion(t) & ActOfAccepting(y) & outputOf(x,y,t))-> -(ActOfAffirming(y))).

%Output of act of accepting is not act of affirming. Trivial due to disjointness axioms 

all x (Argument(x) -> exists y exists z exists t (SentenceContent(y) & (premiseIn(y,x,t) | suppositionIn(y,x,t)))). 

%Any argument entails the existence of some content that is a premise or supposition in that argument

all x (Argument(x) -> exists y exists z exists t (SentenceContent(y) & conclusionIn(y,x,t))). 

%Any argument entails the existence of some content that is a conclusion in that argument 

all x all y all z all t((premiseIn(x,y,t) & continuantPartOfAt(y,z,t)) -> continuantPartOfAt(x,z,t)). 

%Any premise x that is part of an argument y that is part of some other z, is part of z as well

all x all y all t((ComplexArgument(x) & conclusionIn(y,x,t))-> exists z(properContinuantPartOfAt(z,x,t) & conclusionIn(y,z,t))).

%If x is a conclusion in a complex argument then x is a conclusion in a proper part of the complex

all x all y all z all t((ActOfArgumentCreation(x) & ComplexArgument(y) & isCreatedBy(y,x,t) & Argument(z) & properContinuantPartOfAt(z,y,t)) -> exists w(ActOfArgumentCreation(w) & isCreatedBy(z,w,t) & occurrentPartOf(w,x))).  

%Creation of complex arguments entails creation of arguments relevantly linked to complex and creation act

all x(ComplexArgument(x) -> exists y exists t(properContinuantPartOfAt(y,x,t) & (Argument(y) | ComplexArgument(y) | SentenceContent(y)))). 

%Complex arguments have argument, complex argument, or sentence content parts

all x all y all t((ActOfArgumentCreation(x) & TemporalRegion(t) & isCreatedBy(y,x,t)) -> Argument(y)).

%Act of argument creation is closed under arguments; also permits creation of ComplexArgument 

all x(Argument(x) -> exists y exists t(ActOfArgumentCreation(y) & TemporalRegion(t) & isCreatedBy(x,y,t))). 

%Any argument entails the existence of an act of argument creation of which the argument is created at some time 


